!function(t){var r={};function i(n){if(r[n])return r[n].exports;var e=r[n]={i:n,l:!1,exports:{}};return t[n].call(e.exports,e,e.exports,i),e.l=!0,e.exports}i.m=t,i.c=r,i.d=function(n,e,t){i.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:t})},i.r=function(n){Object.defineProperty(n,"__esModule",{value:!0})},i.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return i.d(e,"a",e),e},i.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},i.p="",i(i.s="./src/index.js")}({"./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = ({\r\n  // 调用use时候执行该方法\r\n  install: function (Vue, options) {\r\n    var GLOBLEsize = 0;\r\n    // 声明\r\n    Vue.directive("rightMenu", {\r\n      // 插入时候触发\r\n      bind(el, binding, vnode) {\r\n        // 设置body宽高（为了遮照）\r\n        document.body.style.position = "fixed";\r\n        document.body.style.width = "100%";\r\n        document.body.style.height = "100%";\r\n        // 防止id重复  每次累计加一 \r\n        let currentSize = GLOBLEsize;\r\n        if (el.style.position == "") {\r\n          el.style.position = "relative";\r\n        }\r\n        // 设置菜单层级高于遮罩层\r\n        el.style.zIndex = "99998";\r\n        /**\r\n         * 增加一个遮罩层方便我控制菜单显示时候取消其余事件\r\n         */\r\n        var Mask = document.createElement("div");\r\n        var Maskstyle = "position:fixed;top:0;left:0;width:100%;height:100%;z-index:99997;"\r\n        Mask.style = Maskstyle + "display:none";\r\n        Mask.setAttribute("id", "TT_MASK");\r\n        document.body.appendChild(Mask);\r\n        el.addEventListener("contextmenu", (e) => {\r\n          // debugger;\r\n\r\n          var e = event || window.event;\r\n          e.stopPropagation();//阻止冒泡事件\r\n          e.cancelBubble = true;//阻止冒泡事件ie\r\n          e.preventDefault();//阻止默认事件 \r\n          // 隐藏所有菜单\r\n          for (let i = 0; i < GLOBLEsize; i++) {\r\n            if (document.getElementById("tt_right_menu" + i)) {\r\n              document.getElementById("tt_right_menu" + i).style = `display:none`\r\n            }\r\n          }\r\n          // 菜单位置\r\n          var menuX = e.pageX || e.pageY ? e.pageX : e.clientX + document.body.scrollLeft - document.body.clientLeft;//获取pageX 兼容ie\r\n          var menuY = e.pageX || e.pageY ? e.pageY : e.clientY + document.body.scrollTop - document.body.clientTop;\r\n          // 右键显示遮罩层\r\n          document.getElementById("TT_MASK").style = Maskstyle + "display:block";\r\n          // 找不到这个节点时候 新增一个menu 用于多个菜单的兼容问题\r\n          if (!document.getElementById("tt_right_menu" + currentSize)) {\r\n            // 创建div\r\n            let boxDiv = document.createElement("div");\r\n            // 指令的绑定值进行遍历 生成菜单的节点\r\n            binding.value["menus"].map((item) => {\r\n              let optionp = document.createElement("div");\r\n              // 控制icon位置\r\n              let iconPosition = "";\r\n              // icon内容\r\n              let icon = "";\r\n              // 文字内容\r\n              let content = "";\r\n              // 设置节点文字不可选中\r\n              optionp.setAttribute("unselectable", "on");\r\n\r\n              /**\r\n               * 兼容用户没有callback的情况\r\n               */\r\n              if (item.callback) {\r\n                optionp.onclick = function () {\r\n                  // 隐藏菜单的父级节点\r\n                  optionp.parentNode.style.display = "none";\r\n                  // 隐藏遮罩层\r\n                  Mask.style = Maskstyle + "display:none";\r\n\r\n                  return vnode.context[item.callback](item);\r\n                }\r\n\r\n              } else {\r\n                // 无callback情况\r\n                optionp.onclick = function () {\r\n                  // 隐藏菜单的父级节点\r\n                  optionp.parentNode.style.display = "none";\r\n                  // 隐藏遮罩层\r\n                  Mask.style = Maskstyle + "display:none";\r\n                  return false;\r\n                }\r\n              }\r\n              /**\r\n               * 兼容在展开的选项上右击会出现默认右键，以及禁用穿透事件\r\n               */\r\n              optionp.addEventListener("contextmenu", (e) => {\r\n                var e = event || window.event;\r\n                e.stopPropagation();//阻止冒泡事件\r\n                e.cancelBubble = true;//阻止冒泡事件ie\r\n                e.preventDefault();//阻止默认事件 \r\n              })\r\n              // 如果用户设置了icon\r\n              if (item.icon) {\r\n                // 判断icon位置是左还是右面 -》 可扩展为一个函数 让用户更高程度自定义\r\n                if (item.iconPosition && (item.iconPosition == "left" || item.iconPosition == "right")) {\r\n                  iconPosition = item.iconPosition\r\n                } else {\r\n                  // 默认值 left\r\n                  iconPosition = "left";\r\n                }\r\n                icon = item.icon;\r\n              }\r\n              // 判断content文字 也可以升级为一个函数提高可扩展性\r\n              if (item.content) {\r\n                content = item.content;\r\n              }\r\n              // 判断icon是否有\r\n              if (icon != "") {\r\n                // 剧左或者右 \r\n                if (iconPosition == "right") {\r\n                  // 生成img\r\n                  let img = new Image();\r\n                  img.src = icon;\r\n                  img.style = (item.iconStyle || "") + "vertical-align:middle;";\r\n                  optionp.innerHTML = content;\r\n                  // 追加到option\r\n                  optionp.appendChild(img);\r\n\r\n                } else {\r\n                  let img = new Image();\r\n                  img.src = icon;\r\n                  img.style = (item.iconStyle || "") + "vertical-align:middle;";\r\n                  optionp.appendChild(img);\r\n                  optionp.innerHTML += content;\r\n\r\n                }\r\n              } else {\r\n                // 设置文字内容\r\n                optionp.innerHTML = content;\r\n              }\r\n              /**\r\n               * 兼容屏幕出界的情况；\r\n               */\r\n              optionp.style = `text-align:center;overflow: hidden;text-overflow:ellipsis;white-space:nowrap;margin-block-start: 0em;margin-block-end: 0em;-webkit-touch-callout: none;-webkit-user-select: none;-khtml-user-select: none;-moz-user-select: none;-ms-user-select: none;user-select: none;${binding.value["optionStyle"] ? binding.value["optionStyle"] : ""};${item["style"] ? item["style"] : ""};`\r\n              // 追加选项到总菜单\r\n              boxDiv.appendChild(optionp);\r\n            })\r\n            // 设置唯一id\r\n            boxDiv.setAttribute("id", "tt_right_menu" + currentSize);\r\n            // 菜单的样式\r\n            boxDiv.style = `background:#fff;color:#333;${binding.value["boxStyle"] ? binding.value["boxStyle"] : ""};position:fixed;z-index:99999;top:${menuY}px;left:${menuX}px;`\r\n            //    追加到页面\r\n            document.body.appendChild(boxDiv);\r\n            let divWidth = boxDiv.clientWidth || boxDiv.offsetWidth;\r\n\r\n\r\n          } else {\r\n            // 节点已经存在则不需要重复创建 节省性能，只需要获取后设置位置即可\r\n            let boxDiv = document.getElementById("tt_right_menu" + currentSize);\r\n            boxDiv.style = `color:#333;background:#fff;${binding.value["boxStyle"] ? binding.value["boxStyle"] : ""};position:fixed;z-index:99999;top:${menuY}px;left:${menuX}px;`\r\n            /**\r\n              * 判断是否超出屏幕宽度\r\n              */\r\n            if (menuX + boxDiv.clientWidth >= document.body.clientWidth) {\r\n\r\n              boxDiv.style.left = menuX - boxDiv.clientWidth + "px";\r\n            }\r\n            /**\r\n             * 判断是否超出屏幕高度\r\n             */\r\n            if (menuY + boxDiv.clientHeight >= document.body.clientHeight) {\r\n\r\n              boxDiv.style.top = menuY - boxDiv.clientHeight + "px";\r\n            }\r\n          }\r\n        })\r\n        // 每次创建都会使得唯一遍量增加 防止重复\r\n        GLOBLEsize++;\r\n        // 增加遮罩层的点击事件 （在空白处点击移除右键菜单）-》包含左键和右键点击\r\n        document.getElementById("TT_MASK").addEventListener("click", () => {\r\n          if (document.getElementById("tt_right_menu" + currentSize)) {\r\n            document.getElementById("tt_right_menu" + currentSize).style = `display:none`\r\n          }\r\n          document.getElementById("TT_MASK").style = "display:none";\r\n        })\r\n        document.getElementById("TT_MASK").addEventListener("contextmenu", () => {\r\n          if (document.getElementById("tt_right_menu" + currentSize)) {\r\n            document.getElementById("tt_right_menu" + currentSize).style = `display:none`\r\n          }\r\n          document.getElementById("TT_MASK").style = "display:none";\r\n        })\r\n\r\n      },\r\n      unbind(el) {\r\n        // 解绑时候移除右键监听防止影响其他页面\r\n        el.removeEventListener("contextmenu", this, true);\r\n      }\r\n    })\r\n  }\r\n});\r\n\n\n//# sourceURL=webpack:///./src/index.js?')}});